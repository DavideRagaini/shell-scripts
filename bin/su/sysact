#!/bin/sh

if [ -z "$1" ]; then
	cmds="\
	Lock
	dwm
	dwmblocks
	Leave
	Reboot
	Suspend
	Hibernate
	Display
	Shutdown"
	choice="$(printf "%s" "$cmds" | cut -d'	' -f 2 | dmenu -i -p 'Choose an action:')"
else
	choice="$1"
fi

check_init() {
	# case "$(readlink /sbin/init | cut -f3 -d'/')" in
	case "$(grep "^NAME=" /etc/os-release | cut -f2 -d'=')" in
		NixOS)
			SHUTDOWN='shutdown -h now'
			SUSPEND='systemctl suspend'
			HIBERNATE='systemctl hibernate'
			REBOOT='systemctl reboot';;
		Ubuntu)
			SHUTDOWN='sudo -A sh -c shutdown -h now'
			SUSPEND='sudo -A sh -c systemctl suspend'
			HIBERNATE='sudo -A sh -c systemctl hibernate'
			REBOOT='sudo -A sh -c systemctl reboot';;
		Void)
			SHUTDOWN='sudo -A sh -c shutdown -h now'
			SUSPEND='sudo -A sh -c zzz'
			HIBERNATE='sudo -A sh -c ZZZ'
			REBOOT='sudo -A sh -c reboot -i now';;
		*)
			notify-send "Error: INIT SYSTEM not recognised" ;;
	esac
}

log() {
	printf "%s %s%s\n" "$1" "$(date '+%F %a %T')" "$2" >>"$HOME/.local/uptime"
}

confirm() {
	[ "$(printf "No\\nYes" | dmenu -i -p "$choice" -fn 'IosevkaTerm Nerd Font:style=bold:size=20' -nb darkred -sb red -sf white -nf gray)" = "Yes" ] ||
		exit 1
}

pause_players() {
	dmpc pause
	tppctl pause_all
	bgs -t
	playerctl --all-players pause
}

lock() {
	i3lock -eft -c 1d2021 -i "$HOME/Storage/Pictures/lockscreen.png"
}

case "$choice" in
	[Ss]tart) log "Start     " "" ;;
	[Rr]esume) log "Resume    " "" ;;
	dwm) kill -HUP "$(pgrep -u "$USER" "\bdwm$")" ;;
	dwmblocks) killall -q dwmblocks && setsid dwmblocks & ;;
	[Dd]isplay) xset dpms force off ;;
	[Ll]eave) kill -TERM "$(pgrep -u "$USER" "\bdwm$")" ;;
	[Ll]ock)
		confirm
		lock
		;;
	[Ss]hutdown)
		confirm
		check_init
		log "Shutdown  " " -> $(uptime -p)" &&
			$SHUTDOWN
		;;
	[Ss]uspend)
		confirm
		pause_players
		check_init
		log "Suspend   " "" &&
			$SUSPEND
		;;
	[Hh]ibernate)
		confirm
		pause_players
		check_init
		log "Hibernate " "" &&
			$HIBERNATE
		lock
		;;
	[Rr]eboot)
		confirm
		check_init
		log "Reboot    " "" &&
			$REBOOT
		;;
	*) notify-send "ERROR" && exit 2 ;;
esac

# START
# jq --null-input --arg START "$(date)" --arg HTIME "asdf" '{"START": {"UTS": $START, "HTIME": $HTIME}}'
#
#
