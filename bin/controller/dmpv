#!/bin/sh

if [ -z "$1" ]; then
	CMDS="\
queue
enqueue
eplay
aplay
last
edit_queue
lectures
local
last_lecture"

	CHOSEN="$(echo "$CMDS" | dmenu -i)" || exit
	URL="$(xclip -selection clipboard -o)"
else
	CHOSEN="$1"
	URL="$2"
fi

VIDEOS_FOLDER="${XDG_VIDEOS_DIR:-$HOME/Storage/Videos}"
PATH_QUEUE="$HOME/.config/mpv/queue"
PATH_LAST="$HOME/.config/mpv/last"

playlist_check() {
	printf "%s" "$1" |
		grep -oq 'list='
}

valid_url() {
	printf "%s" "$1" |
		grep -Eoq "((http|https)://)(www.)?[youtube.com|twitch.tv|vimeo|youtu.be]?.*$"
}

add_to_queue() {
	PLAYLIST="$(dmenu -P -p "Name of the playlist?")"
	[ -z "$PLAYLIST" ] && PLAYLIST="1shot"

	if [ -z "$(playlist_check "$1")" ]; then
		TITLE="$(youtube-dl --no-warnings --dump-single-json "$1" | jq -r '.title')"
	else
		TITLE="$(youtube-dl --get-title "$1")"
	fi

	notify-send "$PLAYLIST" "$TITLE\n$1"
	printf "%s:%s\t%s\n%s" "$PLAYLIST" "$TITLE" "$1" "$(cat "$PATH_QUEUE")" >"$PATH_QUEUE" ||
		notify-send "Failed to queue"
	sort "$PATH_QUEUE" -o "$PATH_QUEUE"
}

open_mpv() {
	echo "$1" >"$PATH_LAST"
	notify-send "Working on" "$1"
	# mpv --geometry=256x144+1660+910 --no-terminal --title="fmpv" "$1"
	mpv --no-terminal "$1"
}

case "$CHOSEN" in
queue)
	QUEUE="$(cat "$PATH_QUEUE")"
	URL="$(echo "$QUEUE" |
		grep -P "^$(echo "$QUEUE" |
			grep "https:" |
			sed 's/\t.*//g' |
			dmenu -i -l 20 |
			awk '{print $1}')\s" |
		sed 's/.*\t//')"
	open_mpv "$URL"
	;;

eplay)
	valid_url "$URL"
	add_to_queue "$URL"
	open_mpv "$URL"
	;;

enqueue)
	valid_url "$URL"
	add_to_queue "$URL"
	;;

aplay)
	valid_url "$URL"
	open_mpv "$URL"
	;;

lectures)
	LECTURES="$VIDEOS_FOLDER/Lectures"
	CHOSEN="$(find "$LECTURES" -maxdepth 1 -type d | cut -d'/' -f7 | dmenu -i -l 20)" || exit
	URL="$LECTURES/$CHOSEN"
	open_mpv "$URL"
	;;

'local')
	GENER="$VIDEOS_FOLDER"
	DIR="$(find "$GENER" -maxdepth 1 -type d | cut -d'/' -f6 | dmenu -i -l 20)" || exit
	if [ -d "$GENER$DIR" ]; then
		CHOSEN="$(find "$GENER$DIR" | cut -d'/' -f8 | dmenu -i -l 20)" || exit
		URL="$GENER$DIR/$CHOSEN"
		open_mpv "$URL"
	else
		URL="$GENER$DIR"
		open_mpv "$URL"
	fi
	;;

last)
	mpv "$(cat "$PATH_LAST")"
	;;

last_lecture)
	mpv "$VIDEOS_FOLDER/doing"
	;;

edit_queue)
	$TERMINAL -e nvim "$PATH_QUEUE"
	;;
esac
