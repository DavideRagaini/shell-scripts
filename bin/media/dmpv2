#!/bin/bash

PID="$(wmctrl -lxp | awk '/ mpvFloat.mpv /{print $3}')"
if [ -n "$PID" ]; then
    notify-send "dmpv2 Status" "$(echo "{ \"command\": [ \"loadfile\", \"$1\", \"append-play\" ] }" | socat -d - "/tmp/mpvSockets/$PID" 2>&1 | jq -M)"
else
    dim_screen="$(xrandr | awk '/current/ {sub(",","",$10); print $8$9$10}')"
    dim_mon_x="$(echo "$dim_screen" | cut -d'x' -f1)"
    dim_mon_y="$(echo "$dim_screen" | cut -d'x' -f2)"
    dim_w_x="$((dim_mon_x / 6))"
    dim_w_y="$((dim_mon_y / 6))"
    x="$((dim_mon_x - dim_w_x - 3))"
    y="$((dim_mon_y - dim_w_y - 3))"
    GEOM="$(printf "%sx%s+%s+%s" "$dim_w_x" "$dim_w_y" "$x" "$y")"
    setsid -f mpv --no-terminal --video=auto --geometry="$GEOM" --x11-name="mpvFloat" "$1"
fi

TITLE=""
CHANNEL=""
if grep -q 'playlist' <<<"$1" 2>&1; then
    JSON="$(yt-dlp --no-warnings --dump-single-json "$1" 2>&1)"
    TITLE="$(jq -r '.title' <<<"$JSON")"
    CHANNEL="$(jq -r '.uploader,.channel' <<<"$JSON" | uniq -i | sed '/null/d')"
elif command -v pipe-viewer >/dev/null 2>&1; then
    INFO="$(pipe-viewer --no-interactive --extract '*TITLE*»*AUTHOR*' "$1" 2>&1)"
    TITLE="${INFO%%»*}"
    CHANNEL="${INFO##*»}"
else
    JSON="$(yt-dlp --no-warnings --dump-single-json "$1" 2>&1)"
    TITLE="$(jq -r '.title' <<<"$JSON")"
    CHANNEL="$(jq -r '.uploader,.channel' <<<"$JSON" | uniq -i | sed '/null/d')"
fi

([ "$TITLE" = 'null' ] || [ -z "$TITLE" ]) && notify-send "could not retrieve title" && exit
PATH_LAST="$HOME/.config/mpv/last"
printf "%s» %-20s» %s\t%s\n%s" "$(date '+%k:%M %d/%m/%y')" "$CHANNEL" "$TITLE" "$1" "$(cat "$PATH_LAST")" >"$PATH_LAST"
