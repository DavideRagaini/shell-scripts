#!/bin/sh

SOCKET='/tmp/mpv-bgs'

usage() {
    echo \
"Usage: BackGroundSound
[-h]                        help
[-t]                        toggle playback
[-g GET_PROPERTY]           get property
[-s SET_PROPERTY]           set property
[-v SET_VOLUME]             set volume"
}

notify() {
    # if [ -n "$DISPLAY" ]; then
    #     notify-send "$1" "$2"
    # else
        echo "$PROPERTY"
    # fi
}

getp() {
    PROPERTY="$(echo "{ \"command\": [\"get_property\", \"${1}\"] }" | socat -d - "$SOCKET" | jq -r '.data')"
    notify "BGS Get Property" "$1: $PROPERTY"
}

setp() {
    PROPERTY="$(echo ${1} | cut -d' ' -f1)"
    VALUE="$(echo ${1} | cut -d' ' -f2)"
    notify "BGS Set Property" "$PROPERTY: $VALUE"
    echo "{ \"command\": [\"set_property\", \"$PROPERTY\", \"$VALUE\"] }" |
        socat -d - "$SOCKET"
}

start_bgs() {
    mpv --no-config \
        --no-terminal \
        --shuffle \
        --loop-playlist=inf \
        --volume=85 \
        --input-ipc-server="$SOCKET" \
        "${XDG_MUSIC_DIR:-$HOME/Storage/Music}/BACKGROUNDS/"
    notify 'BGS exits'
}

[ -z "$1" ] && start_bgs

while getopts "Shnptg:s:d:v:" arg; do
    case "$arg" in
        S) start_bgs ;;
        g) getp "$OPTARG" ;;
        s) setp "${OPTARG}" ;;
        d) echo "${OPTARG}" | socat -d - "$SOCKET" ;;
        p) echo "playlist-prev" | socat -d - "$SOCKET" ;;
        n) echo "playlist-next" | socat -d - "$SOCKET" ;;
        v) [ $OPTARG -gt 150 ] &&
               echo "Volume too Loud, exit" &&
               exit
           setp "volume ${OPTARG}" ;;
        t) echo cycle pause |
                 socat -d - "$SOCKET" ;;
        h|*) usage; exit ;;
    esac
done
