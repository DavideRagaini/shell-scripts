#!/bin/sh

[ -z "$1" ] && echo "Missing arguments" && exit
SOCKETS="$(find "/tmp/mpv" -type s)"
CHOSEN=''

com() {
  ARGS="$(echo "$@" | sed 's/ /\", \"/g')"
  echo "{ \"command\": [\"$ARGS\"] }" |
    socat -d - "$CHOSEN"
  echo "show-text \"$*\" 5000" |
    socat -d - "$CHOSEN"
}

com_all() {
  for i in $SOCKETS; do
    echo "${1}" |
      socat -d - "$i"
  done
}

choose_instance() {
  if [ "$(echo "$SOCKETS" | wc -l)" -eq 1 ]; then
    CHOSEN="$SOCKETS"
  else
    for i in $SOCKETS; do
      CHOSEN="$i"
      TITLES="$(com get_property media-title | jq -r '.data')"
      STATUS="$(com get_property pause | jq -r '.data')"
      [ "$STATUS" = 'true' ] && STATUS='' || STATUS=''
      LIST="${LIST}${STATUS} ${TITLES} (${i})\n"
    done
    CHOSEN="$(echo "${LIST%%\\n}" | bemenu -i -l 5 -p "$1")"
  fi
  CHOSEN="${CHOSEN##*(}"
  CHOSEN="${CHOSEN%%)*}"
}

case "$1" in
  toggle)
    choose_instance "Toggle:"
    com cycle pause
    ;;
  play)
    choose_instance "Play:"
    com set_property pause false
    ;;
  pause)
    choose_instance "Pause:"
    com set_property pause yes
    ;;
  pauseall)
    com_all '{ "command": ["set_property", "pause", true] }'
    ;;
  volume)
    choose_instance "Set volume to:"
    VOLUME="$(com get_property "volume" | jq -r ".data" | cut -d'.' -f1)"
    DELTA="$2"
    com set_property "volume $((VOLUME + DELTA))"
    ;;
  invert)
    com_all '{ "command": ["cycle", "pause"] }'
    ;;
  prev)
    choose_instance "Previous:"
    com "playlist-prev"
    ;;
  next)
    choose_instance "Next:"
    com "playlist-next"
    ;;
  info)
    choose_instance "Info:"
    TITLE="$(com get_property media-title | jq -r ".data")"
    UPLOADER="$(com get_property metadata/by-key/uploader | jq -r ".data")"
    PATH="$(com get_property path | jq -r ".data")"
    echo "[[$PATH][$UPLOADER: $TITLE]]" # | xclip -i -selection clipboard
    ;;
  seek)
    choose_instance "Seek:"
    com seek "$2"
    ;;
  get)
    choose_instance "Get:"
    PROPERTY="$(com get_property "$2" | jq -r ".data")"
    notify-send "Get Property" "$2: $PROPERTY"
    echo "$2: $PROPERTY"
    ;;
  'set')
    choose_instance "Set:"
    PROPERTY="$(echo "${2}" | cut -d' ' -f1)"
    VALUE="$(echo "${2}" | cut -d' ' -f2)"
    com set_property "$PROPERTY" "$VALUE"
    ;;
  subtitle)
    choose_instance "Add subtitle to:"
    com set_property sub-files "$2"
    ;;
  vid | video)
    if [ -n "$2" ]; then
      VALUE="$2"
    else
      VALUE="$(printf "on\noff" | bemenu -i)"
    fi
    choose_instance "Set video:"
    case "$VALUE" in
      on) VALUE=1 ;;
      off) VALUE='no' ;;
    esac
    notify-send "Set Property" "vid: $VALUE"
    com set_property vid "$VALUE"
    ;;
  direct)
    choose_instance "Direct Com:"
    com "$2"
    ;;
  clean)
    if [ "$(echo "$SOCKETS" | wc -l)" -eq 1 ]; then
      CHOSEN="$SOCKETS"
      rm "$CHOSEN"
    else
      for i in $SOCKETS; do
        CHOSEN="$i"
        ERROR="$(com get_property media-title | jq -r '.error')"
        if [ "$ERROR" != "success" ]; then
          rm "$CHOSEN"
        fi
      done
    fi
    ;;
  add)
    choose_instance "Append:"
    com loadfile "$2" append-play
    ;;
  help)
    echo \
      "MPV IPC Socket Basic Controller

USAGE:
tppctl Options [property]

OPTIONS:
  toggle / play / pause
  play
  pause
  pause all / invert
  volume
  invert
  info [property]
  prev / next
  seek [property]
  get [property]
  set [property]
  subtitle [path]
  vid / video [yes/no]
  direct [string]
  clean
  add [video]
  help"
    exit
    ;;
esac
