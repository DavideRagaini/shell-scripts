#!/bin/bash

if [ -z "$1" ]; then
	CMDS="queue
enqueue
eplay
aplay
last
edit_queue
lectures
local
last_lecture"

	CHOSEN="$(dmenu -i <<<"$CMDS")" || exit
	URL="$(xclip -selection clipboard -o)" >/dev/null
else
	CHOSEN="$1"
	URL="$2"
fi

VIDEOS_FOLDER="${XDG_VIDEOS_DIR:-$HOME/Storage/Videos}"
PATH_QUEUE="$HOME/.config/mpv/queue"
PATH_LAST="$HOME/.config/mpv/last"
TITLE=""
GEOM=""

get_title() {
	TITLE="$(yt-dlp --no-warnings --dump-single-json "$1" | jq -r '"\(.title) «\(.uploader)»"')"
	[ -z "$TITLE" ] && notify-send "could not retrieve title" && exit
}

add_to_queue() {
	PLAYLIST="$(: | dmenu -p "Name of the playlist?")"
	[ -z "$PLAYLIST" ] && PLAYLIST="1shot"
	get_title "$1"
	notify-send "$PLAYLIST:$TITLE" "$1"
	printf "%s:%s «%s»\t%s\n%s" "$PLAYLIST" "$TITLE" "$(date '+%k:%M %d/%m/%y')" "$1" "$(cat "$PATH_QUEUE")" >"$PATH_QUEUE" ||
		notify-send "Failed to queue"
	sort "$PATH_QUEUE" -o "$PATH_QUEUE"
}

floating() {
	dim_screen="$(xrandr | awk '/current/ {sub(",","",$10); print $8$9$10}')"
	dim_mon_x="$(echo "$dim_screen" | cut -d'x' -f1)"
	dim_mon_y="$(echo "$dim_screen" | cut -d'x' -f2)"
	dim_w_x="$((dim_mon_x/6))"
	dim_w_y="$((dim_mon_y/6))"
	x="$((dim_mon_x - dim_w_x - 5))"
	y="$((dim_mon_y - dim_w_y - 40))"		# bottom bar
	# y="$((dim_mon_y - dim_w_y - 5))"		# top bar
	GEOM="$(printf "%sx%s+%s+%s" "$dim_w_x" "$dim_w_y" "$x" "$y")"
}

open_mpv() {
	echo "$1" >"$PATH_LAST"
	notify-send "Working on:" "$TITLE\n$1"
	floating
	ts -L "$TITLE" mpv --no-terminal --geometry="$GEOM" --x11-name="mpvFloat" "$1" >/dev/null
}

case "$CHOSEN" in
	queue)
		CHOSEN="$(cut -f1 "$PATH_QUEUE" | dmenu -i -l 20)" || exit
		LINE="$(grep -w "$CHOSEN" "$PATH_QUEUE")"
		TITLE="$(cut -f1 <<<"$LINE")"
		URL="$(cut -f2 <<<"$LINE")"
		open_mpv "$URL"
		;;

	eplay)
		open_mpv "$URL" &
		add_to_queue "$URL"
		;;

	enqueue)
		add_to_queue "$URL"
		;;

	aplay)
		get_title "$URL"
		open_mpv "$URL"
		;;

	lectures)
		LECTURES="$VIDEOS_FOLDER/Lectures"
		CHOSEN="$(find "$LECTURES" -maxdepth 1 -type d | cut -d'/' -f7 | sed '/^$/d' | dmenu -i -l 10)" ||
			exit
		URL="$LECTURES/$CHOSEN"
		mpv "$URL" '--title="${path} - mpv"'
		;;

	local)
		GENER="$VIDEOS_FOLDER"
		DIR="$(find "$GENER" -maxdepth 1 -type d | cut -d'/' -f6 | dmenu -i -l 20)" || exit
		if [ -d "$GENER$DIR" ]; then
			CHOSEN="$(find "$GENER$DIR" | cut -d'/' -f8 | dmenu -i -l 20)" || exit
			URL="$GENER$DIR/$CHOSEN"
			open_mpv "$URL"
		else
			URL="$GENER$DIR"
			open_mpv "$URL"
		fi
		;;

	last)
		open_mpv "$(cat "$PATH_LAST")"
		;;

	last_lecture)
		mpv "$VIDEOS_FOLDER/Lectures/doing"
		;;

	edit_queue)
		$VISUAL "$PATH_QUEUE"
		;;
esac
