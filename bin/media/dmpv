#!/bin/bash

if [ -z "$1" ]; then
	CMDS="queue
enqueue
eplay
aplay
last
edit_queue
edit_last
lectures
local
last_lecture"
	CHOSEN="$(dmenu -i <<<"$CMDS")" || exit
	URL="$(xclip -selection clipboard -o)" >/dev/null
else
	CHOSEN="$1"
	URL="$2"
fi

export TS_SOCKET="/tmp/ts_dmpv"
VIDEOS_FOLDER="${XDG_VIDEOS_DIR:-$HOME/Storage/Videos}"
PATH_QUEUE="$HOME/.config/mpv/queue"
PATH_LAST="$HOME/.config/mpv/last"
TITLE=""
CHANNEL=""
GEOM=""

get_title() {
	JSON="$(yt-dlp --no-warnings --dump-single-json "$URL")"
	TITLE="$(jq -r '.title' <<<$JSON)"
	CHANNEL="$(jq -r '.uploader,.channel' <<<$JSON | uniq -i | sed '/null/d')"
	[ -z "$TITLE" ] && notify-send "could not retrieve title" && exit
}

add_to_queue() {
	PLAYLIST="$(: | dmenu -p "Name of the playlist?")"
	[ -z "$PLAYLIST" ] && PLAYLIST="1shot"
	get_title
	notify-send "$PLAYLIST:$TITLE $CHANNEL" "$URL"
	printf "%s: %s [%-15s] «%s»\t%s\n" "$PLAYLIST" "$TITLE" "$CHANNEL" "$(date '+%k:%M %d/%m/%y')" "$URL" >>"$PATH_QUEUE"
	sort -u "$PATH_QUEUE" -o "$PATH_QUEUE"
}

floating() {
	dim_screen="$(xrandr | awk '/current/ {sub(",","",$10); print $8$9$10}')"
	dim_mon_x="$(echo "$dim_screen" | cut -d'x' -f1)"
	dim_mon_y="$(echo "$dim_screen" | cut -d'x' -f2)"
	dim_w_x="$((dim_mon_x/6))"
	dim_w_y="$((dim_mon_y/6))"
	x="$((dim_mon_x - dim_w_x - 5))"
	y="$((dim_mon_y - dim_w_y - 40))"		# bottom bar
	# y="$((dim_mon_y - dim_w_y - 5))"		# top bar
	GEOM="$(printf "%sx%s+%s+%s" "$dim_w_x" "$dim_w_y" "$x" "$y")"
}

save_to_last() {
	printf "%s: %-20s: %s\t%s\n%s" "$(date '+%k:%M %d/%m/%y')" "$CHANNEL" "$TITLE" "$URL" "$(cat $PATH_LAST)" >"$PATH_LAST"
}

fplay() {
	floating
	notify-send "Working on:" "$TITLE «$CHANNEL»\n$URL"
	ts -L "$TITLE «$CHANNEL»" mpv --no-terminal --geometry="$GEOM" --x11-name="mpvFloat" "$URL" >/dev/null
}

get_from_file(){
	FILE="${1}"
	CHOSEN="$(cut -f1 "$FILE" | dmenu -i -l 20)" || exit
	LINE="$(grep -w "$CHOSEN" "$FILE")"
	TITLE="$(cut -f1 <<<"$LINE")"
	URL="$(cut -f2 <<<"$LINE")"
}

case "$CHOSEN" in
	queue) get_from_file "$PATH_QUEUE"
		   save_to_last
		   fplay ;;
	eplay) save_to_last
		   fplay &
		   add_to_queue ;;
	enqueue) add_to_queue ;;
	aplay) get_title
		   save_to_last
		   fplay ;;
	lectures)
		LECTURES="$VIDEOS_FOLDER/Lectures"
		CHOSEN="$(find "$LECTURES" -maxdepth 1 -type d | cut -d'/' -f7 | sed '/^$/d' | dmenu -i -l 10)" ||
			exit
		URL="$LECTURES/$CHOSEN"
		mpv "$URL" '--title=${path} - mpv' ;;
	local)
		GENER="$VIDEOS_FOLDER"
		DIR="$(find "$GENER" -maxdepth 1 -type d | cut -d'/' -f6 | dmenu -i -l 20)" || exit
		if [ -d "$GENER$DIR" ]; then
			CHOSEN="$(find "$GENER$DIR" | cut -d'/' -f8 | dmenu -i -l 20)" || exit
			URL="$GENER$DIR/$CHOSEN"
			mpv "$URL"
		else
			URL="$GENER$DIR"
			mpv "$URL"
		fi ;;
	last) get_from_file "$PATH_LAST"
		  notify-send "Working on:" "$TITLE «$CHANNEL»\n$URL"
		  fplay	;;
	last_lecture) mpv "$VIDEOS_FOLDER/Lectures/doing" ;;
	edit_queue)	"$VISUAL" "$PATH_QUEUE" ;;
	edit_last)	"$VISUAL" "$PATH_QUEUE" ;;
	ts)	shift 1
		ts $@ ;;
	*) notify-send "Something wrong..." ;;
esac
